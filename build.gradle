plugins {
    id 'scala'
    id "org.owasp.dependencycheck" version "12.1.8"
    id 'io.gatling.gradle' version '3.14.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

apply plugin: 'scala'
apply plugin: 'io.gatling.gradle'
apply plugin: "org.owasp.dependencycheck"

group 'uk.gov.hmcts.reform'
version = '1.0'

dependencyCheck {
    suppressionFile = "config/owasp/suppressions.xml"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2025.0.0"
    }
    dependencies {
        //CVE-2025-55163, CVE-2025-58056, CVE-2025-58057
        dependencySet(group: 'io.netty', version: '4.2.6.Final') {
            entry 'netty-buffer'
            entry 'netty-codec'
            entry 'netty-codec-dns'
            entry 'netty-codec-http'
            entry 'netty-codec-http2'
            entry 'netty-codec-socks'
            entry 'netty-common'
            entry 'netty-handler'
            entry 'netty-handler-proxy'
            entry 'netty-resolver'
            entry 'netty-resolver-dns'
            entry 'netty-resolver-dns-classes-macos'
            entry 'netty-resolver-dns-native-macos'
            entry 'netty-transport'
            entry 'netty-transport-classes-epoll'
            entry 'netty-transport-classes-kqueue'
            entry 'netty-transport-native-epoll'
            entry 'netty-transport-native-kqueue'
            entry 'netty-transport-native-unix-common'
            entry 'netty-codec-mqtt'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(JavaExec) {
    // Configure the size of the JVM if necessary
    jvmArgs = ['-Xms1024m', '-Xmx2048m']
    /* Use the following args to build a report when a test was terminated
    args = [
        "--reports-only", "fact-20201109092032896",
        '--results-folder', file('build/reports/gatling').absolutePath,
        ]
    */
}

tasks.withType(Copy).all{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

gatlingRun {
    simulationClassName =  'uk.gov.hmcts.pcq.simulations.PCQSimulation'
}

/*dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}*/



dependencies {
    dependencies {
        implementation('io.gatling.highcharts:gatling-charts-highcharts:3.14.5') {
            exclude group: 'io.pebbletemplates', module: 'pebble'
        }
    }
}


sourceSets {
    gatling {
        scala {
            srcDir 'src/gatling/simulations'
        }
        resources {
            srcDir 'src/gatling/resources'
        }
    }
}
