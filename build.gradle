plugins {
    id 'scala'
    id 'io.gatling.gradle' version '3.11.5.2'
    id "org.owasp.dependencycheck" version "9.0.7"
    id 'io.spring.dependency-management' version '1.1.6'
}

apply plugin: 'scala'
apply plugin: 'io.gatling.gradle'
apply plugin: "org.owasp.dependencycheck"

group 'uk.gov.hmcts.reform'
version = '1.0'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
    }
    dependencies {
        // CVE-2022-24823
        dependencySet(group: 'io.netty', version: '4.1.112.Final') {
            entry 'netty-buffer'
            entry 'netty-codec'
            entry 'netty-codec-dns'
            entry 'netty-codec-http'
            entry 'netty-codec-http2'
            entry 'netty-codec-socks'
            entry 'netty-common'
            entry 'netty-handler'
            entry 'netty-handler-proxy'
            entry 'netty-resolver'
            entry 'netty-resolver-dns'
            entry 'netty-resolver-dns-classes-macos'
            entry 'netty-resolver-dns-native-macos'
            entry 'netty-transport'
            entry 'netty-transport-classes-epoll'
            entry 'netty-transport-classes-kqueue'
            entry 'netty-transport-native-epoll'
            entry 'netty-transport-native-kqueue'
            entry 'netty-transport-native-unix-common'
            entry 'netty-codec-mqtt'
        }
        dependencySet(group: 'org.scala-lang', version: '2.13.14') {
            entry 'scala-library'
            entry 'scala-compiler'
            entry 'scala-reflect'
        }
        dependencySet(group: 'ch.qos.logback', version: '1.5.7') {
            entry 'logback-core'
            entry 'logback-classic'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(JavaExec) {
    // Configure the size of the JVM if necessary
    jvmArgs = ['-Xms1024m', '-Xmx2048m']
    /* Use the following args to build a report when a test was terminated
    args = [
        "--reports-only", "fact-20201109092032896",
        '--results-folder', file('build/reports/gatling').absolutePath,
        ]
    */
}

tasks.withType(Copy).all{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

gatling {
    gatlingVersion '3.9.5'
    scalaVersion '2.13.10'
    simulations = {
        include "uk/gov/hmcts/pcq/simulations/PCQSimulation.scala"
    }
}

dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}



dependencies {
    implementation group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: '3.11.5'
}


sourceSets {
    gatling {
        scala {
            srcDir 'src/gatling/simulations'
        }
        resources {
            srcDir 'src/gatling/resources'
        }
    }
}
